//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/KeyconFigInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @KeyconFigInputs: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @KeyconFigInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""KeyconFigInputs"",
    ""maps"": [
        {
            ""name"": ""Main"",
            ""id"": ""657cd644-3877-4ab4-99e0-cc0491e5aaa0"",
            ""actions"": [
                {
                    ""name"": ""RightCtrl_Standard"",
                    ""type"": ""Button"",
                    ""id"": ""0b378418-455e-4c95-80ce-d4d2cf318be7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftCtrl_Standard"",
                    ""type"": ""Button"",
                    ""id"": ""261abf85-7a52-4875-8b33-b0d3cb0d1859"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick_Standard"",
                    ""type"": ""Button"",
                    ""id"": ""6ab1d7c6-3ca5-45c1-bdd5-2ab0fca7d63e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftClick_Standard"",
                    ""type"": ""Button"",
                    ""id"": ""3d9f8a74-a555-46d4-81de-1550339f4e08"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightShift_Standard"",
                    ""type"": ""Button"",
                    ""id"": ""0de1d274-e0ec-466e-868f-9aaee535e5a8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftShift_Standard"",
                    ""type"": ""Button"",
                    ""id"": ""b7597301-351b-48f1-a693-5500d160e44f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AKye_Standard"",
                    ""type"": ""Button"",
                    ""id"": ""734edc59-d706-4db2-804a-bf98a2784a8c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CursorPosition"",
                    ""type"": ""Value"",
                    ""id"": ""d8a426df-ebb7-4c3b-b559-54c3bf9b46fa"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Enter_Standard"",
                    ""type"": ""Button"",
                    ""id"": ""514c5e35-08e5-4b6a-801e-846745d1ea19"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ef44c5ea-fbcb-4372-8e18-715b459359dc"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightClick_Standard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a68c4f4-0f2d-4576-9c03-79cc4a3debe7"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftClick_Standard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""61127cb2-c02f-4989-b42b-9572b12abde2"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftShift_Standard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d6b58c0d-1123-44db-96fe-35d2ad4388b4"",
                    ""path"": ""<Keyboard>/rightCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightCtrl_Standard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""df5e3e17-c20a-45bd-b897-4042501608ca"",
                    ""path"": ""<Keyboard>/rightShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightShift_Standard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e8bef5df-5046-46ca-bed8-ca22fd4aa061"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftCtrl_Standard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""150f3bac-0002-4444-8a3f-39cc866277e8"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AKye_Standard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Press Position"",
                    ""id"": ""cc632946-5c44-4244-8edb-1cb7cfd26239"",
                    ""path"": ""PressPosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CursorPosition"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""press"",
                    ""id"": ""12bf279c-69e5-4276-be2d-9fc0a6d3b423"",
                    ""path"": ""<Pointer>/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CursorPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""position"",
                    ""id"": ""7aa18495-1629-4970-af01-d33afe4b79f5"",
                    ""path"": ""<Pointer>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CursorPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""44a54163-870d-47f9-9f7f-cd36e22e81f9"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Enter_Standard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Main
        m_Main = asset.FindActionMap("Main", throwIfNotFound: true);
        m_Main_RightCtrl_Standard = m_Main.FindAction("RightCtrl_Standard", throwIfNotFound: true);
        m_Main_LeftCtrl_Standard = m_Main.FindAction("LeftCtrl_Standard", throwIfNotFound: true);
        m_Main_RightClick_Standard = m_Main.FindAction("RightClick_Standard", throwIfNotFound: true);
        m_Main_LeftClick_Standard = m_Main.FindAction("LeftClick_Standard", throwIfNotFound: true);
        m_Main_RightShift_Standard = m_Main.FindAction("RightShift_Standard", throwIfNotFound: true);
        m_Main_LeftShift_Standard = m_Main.FindAction("LeftShift_Standard", throwIfNotFound: true);
        m_Main_AKye_Standard = m_Main.FindAction("AKye_Standard", throwIfNotFound: true);
        m_Main_CursorPosition = m_Main.FindAction("CursorPosition", throwIfNotFound: true);
        m_Main_Enter_Standard = m_Main.FindAction("Enter_Standard", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Main
    private readonly InputActionMap m_Main;
    private List<IMainActions> m_MainActionsCallbackInterfaces = new List<IMainActions>();
    private readonly InputAction m_Main_RightCtrl_Standard;
    private readonly InputAction m_Main_LeftCtrl_Standard;
    private readonly InputAction m_Main_RightClick_Standard;
    private readonly InputAction m_Main_LeftClick_Standard;
    private readonly InputAction m_Main_RightShift_Standard;
    private readonly InputAction m_Main_LeftShift_Standard;
    private readonly InputAction m_Main_AKye_Standard;
    private readonly InputAction m_Main_CursorPosition;
    private readonly InputAction m_Main_Enter_Standard;
    public struct MainActions
    {
        private @KeyconFigInputs m_Wrapper;
        public MainActions(@KeyconFigInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @RightCtrl_Standard => m_Wrapper.m_Main_RightCtrl_Standard;
        public InputAction @LeftCtrl_Standard => m_Wrapper.m_Main_LeftCtrl_Standard;
        public InputAction @RightClick_Standard => m_Wrapper.m_Main_RightClick_Standard;
        public InputAction @LeftClick_Standard => m_Wrapper.m_Main_LeftClick_Standard;
        public InputAction @RightShift_Standard => m_Wrapper.m_Main_RightShift_Standard;
        public InputAction @LeftShift_Standard => m_Wrapper.m_Main_LeftShift_Standard;
        public InputAction @AKye_Standard => m_Wrapper.m_Main_AKye_Standard;
        public InputAction @CursorPosition => m_Wrapper.m_Main_CursorPosition;
        public InputAction @Enter_Standard => m_Wrapper.m_Main_Enter_Standard;
        public InputActionMap Get() { return m_Wrapper.m_Main; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainActions set) { return set.Get(); }
        public void AddCallbacks(IMainActions instance)
        {
            if (instance == null || m_Wrapper.m_MainActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MainActionsCallbackInterfaces.Add(instance);
            @RightCtrl_Standard.started += instance.OnRightCtrl_Standard;
            @RightCtrl_Standard.performed += instance.OnRightCtrl_Standard;
            @RightCtrl_Standard.canceled += instance.OnRightCtrl_Standard;
            @LeftCtrl_Standard.started += instance.OnLeftCtrl_Standard;
            @LeftCtrl_Standard.performed += instance.OnLeftCtrl_Standard;
            @LeftCtrl_Standard.canceled += instance.OnLeftCtrl_Standard;
            @RightClick_Standard.started += instance.OnRightClick_Standard;
            @RightClick_Standard.performed += instance.OnRightClick_Standard;
            @RightClick_Standard.canceled += instance.OnRightClick_Standard;
            @LeftClick_Standard.started += instance.OnLeftClick_Standard;
            @LeftClick_Standard.performed += instance.OnLeftClick_Standard;
            @LeftClick_Standard.canceled += instance.OnLeftClick_Standard;
            @RightShift_Standard.started += instance.OnRightShift_Standard;
            @RightShift_Standard.performed += instance.OnRightShift_Standard;
            @RightShift_Standard.canceled += instance.OnRightShift_Standard;
            @LeftShift_Standard.started += instance.OnLeftShift_Standard;
            @LeftShift_Standard.performed += instance.OnLeftShift_Standard;
            @LeftShift_Standard.canceled += instance.OnLeftShift_Standard;
            @AKye_Standard.started += instance.OnAKye_Standard;
            @AKye_Standard.performed += instance.OnAKye_Standard;
            @AKye_Standard.canceled += instance.OnAKye_Standard;
            @CursorPosition.started += instance.OnCursorPosition;
            @CursorPosition.performed += instance.OnCursorPosition;
            @CursorPosition.canceled += instance.OnCursorPosition;
            @Enter_Standard.started += instance.OnEnter_Standard;
            @Enter_Standard.performed += instance.OnEnter_Standard;
            @Enter_Standard.canceled += instance.OnEnter_Standard;
        }

        private void UnregisterCallbacks(IMainActions instance)
        {
            @RightCtrl_Standard.started -= instance.OnRightCtrl_Standard;
            @RightCtrl_Standard.performed -= instance.OnRightCtrl_Standard;
            @RightCtrl_Standard.canceled -= instance.OnRightCtrl_Standard;
            @LeftCtrl_Standard.started -= instance.OnLeftCtrl_Standard;
            @LeftCtrl_Standard.performed -= instance.OnLeftCtrl_Standard;
            @LeftCtrl_Standard.canceled -= instance.OnLeftCtrl_Standard;
            @RightClick_Standard.started -= instance.OnRightClick_Standard;
            @RightClick_Standard.performed -= instance.OnRightClick_Standard;
            @RightClick_Standard.canceled -= instance.OnRightClick_Standard;
            @LeftClick_Standard.started -= instance.OnLeftClick_Standard;
            @LeftClick_Standard.performed -= instance.OnLeftClick_Standard;
            @LeftClick_Standard.canceled -= instance.OnLeftClick_Standard;
            @RightShift_Standard.started -= instance.OnRightShift_Standard;
            @RightShift_Standard.performed -= instance.OnRightShift_Standard;
            @RightShift_Standard.canceled -= instance.OnRightShift_Standard;
            @LeftShift_Standard.started -= instance.OnLeftShift_Standard;
            @LeftShift_Standard.performed -= instance.OnLeftShift_Standard;
            @LeftShift_Standard.canceled -= instance.OnLeftShift_Standard;
            @AKye_Standard.started -= instance.OnAKye_Standard;
            @AKye_Standard.performed -= instance.OnAKye_Standard;
            @AKye_Standard.canceled -= instance.OnAKye_Standard;
            @CursorPosition.started -= instance.OnCursorPosition;
            @CursorPosition.performed -= instance.OnCursorPosition;
            @CursorPosition.canceled -= instance.OnCursorPosition;
            @Enter_Standard.started -= instance.OnEnter_Standard;
            @Enter_Standard.performed -= instance.OnEnter_Standard;
            @Enter_Standard.canceled -= instance.OnEnter_Standard;
        }

        public void RemoveCallbacks(IMainActions instance)
        {
            if (m_Wrapper.m_MainActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMainActions instance)
        {
            foreach (var item in m_Wrapper.m_MainActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MainActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MainActions @Main => new MainActions(this);
    public interface IMainActions
    {
        void OnRightCtrl_Standard(InputAction.CallbackContext context);
        void OnLeftCtrl_Standard(InputAction.CallbackContext context);
        void OnRightClick_Standard(InputAction.CallbackContext context);
        void OnLeftClick_Standard(InputAction.CallbackContext context);
        void OnRightShift_Standard(InputAction.CallbackContext context);
        void OnLeftShift_Standard(InputAction.CallbackContext context);
        void OnAKye_Standard(InputAction.CallbackContext context);
        void OnCursorPosition(InputAction.CallbackContext context);
        void OnEnter_Standard(InputAction.CallbackContext context);
    }
}
